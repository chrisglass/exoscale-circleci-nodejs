version: 2

jobs:
  test:
    machine:
      docker_layer_caching: true
    steps:
      - checkout
      - run: docker-compose build
      - run: APP_VERSION=$CIRCLE_SHA1 docker-compose up -d
      - run: docker exec -it node_app node test.js
      - run: docker-compose down

  build:
    machine:
      docker_layer_caching: true
    environment:
      - IMAGE_NAME: exoscale/exoscale-circleci-nodejs
    steps:
      - checkout
      - run: docker-compose build
      - run: docker login -u $DOCKER_USER -p $DOCKER_PASS
      - run: docker-compose push

  deploy:
    machine: true
    environment:
      - DOCKER_TLS_VERIFY: "1"
      - DOCKER_CERT_PATH: "certs"
      - IMAGE_NAME: exoscale/exoscale-circleci-nodejs
      - BUCKET_NAME: exoscale-circleci-nodejs
      - APP_VERSION: ${CIRCLE_SHA1}
    steps:
      - checkout
      - run: sudo pip install s3cmd
      - run: sudo apt-get update && sudo apt-get install jq
      - run: |
          mkdir certs
          s3cmd --access_key $API_KEY \
                --secret_key $API_SECRET \
                --host sos-ch-dk-2.exo.io \
                --host-bucket '%(bucket)s.sos-ch-dk-2.exo.io' \
                get s3://$BUCKET_NAME/certs/ --recursive certs
      - run: |
          echo "export DOCKER_HOST=tcp://$(cat certs/config.json | jq '.Driver.IPAddress' --raw-output):2376" >> $BASH_ENV
          source $BASH_ENV
      - run: docker-compose pull
      - run: APP_VERSION=$CIRCLE_SHA1 docker-compose up -d
      - run: docker exec -it node_app node test.js

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - test
      - build:
          requires:
            - test
          context: dockerhub
      - deploy:
          requires:
            - build
          context: exoscale
